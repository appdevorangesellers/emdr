import { CancelParameters, CreateParameters, GetParameters, ListParameters } from './parameters';
import { RefundData } from '../../../data/refunds/data';
import Callback from '../../../types/Callback';
import List from '../../../data/list/List';
import NetworkClient from '../../../NetworkClient';
import ParentedResource from '../../ParentedResource';
import Refund from '../../../data/refunds/Refund';
export default class PaymentsRefundsResource extends ParentedResource<RefundData, Refund> {
    constructor(networkClient: NetworkClient);
    protected getResourceUrl(paymentId: string): string;
    /**
     * Retrieve Refunds.
     *
     * -   If the payment-specific endpoint is used, only Refunds for that specific Payment are returned.
     * -   When using the top level endpoint `v2/refunds` with an API key, only refunds for the corresponding website profile and mode are returned.
     * -   When using the top level endpoint with OAuth, you can specify the profile and mode with the `profileId` and `testmode` parameters respectively. If you omit `profileId`, you will get all
     *     Refunds for the Organization.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    all: PaymentsRefundsResource['list'];
    /**
     * Retrieve Refunds.
     *
     * -   If the payment-specific endpoint is used, only Refunds for that specific Payment are returned.
     * -   When using the top level endpoint `v2/refunds` with an API key, only refunds for the corresponding website profile and mode are returned.
     * -   When using the top level endpoint with OAuth, you can specify the profile and mode with the `profileId` and `testmode` parameters respectively. If you omit `profileId`, you will get all
     *     Refunds for the Organization.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    page: PaymentsRefundsResource['list'];
    /**
     * For certain payment methods, like iDEAL, the underlying banking system will delay refunds until the next day. Until that time, refunds may be canceled manually in the [Mollie
     * Dashboard](https://www.mollie.com/dashboard), or programmatically by using this endpoint.
     *
     * A Refund can only be canceled while its `status` field is either `queued` or `pending`. See the /reference/v2/refunds-api/get-refund for more information.
     *
     * @see https://docs.mollie.com/reference/v2/refunds-api/cancel-refund
     */
    delete: PaymentsRefundsResource['cancel'];
    /**
     * Creates a Refund on the Payment. The refunded amount is credited to your customer.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/create-refund
     */
    create(parameters: CreateParameters): Promise<Refund>;
    create(parameters: CreateParameters, callback: Callback<Refund>): void;
    /**
     * Retrieve a single Refund by its ID. Note the Payment's ID is needed as well.
     *
     * If you do not know the original payment's ID, you can use the /reference/v2/refunds-api/list-refunds.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/get-refund
     */
    get(id: string, parameters: GetParameters): Promise<Refund>;
    get(id: string, parameters: GetParameters, callback: Callback<Refund>): void;
    /**
     * Retrieve Refunds.
     *
     * -   If the payment-specific endpoint is used, only Refunds for that specific Payment are returned.
     * -   When using the top level endpoint `v2/refunds` with an API key, only refunds for the corresponding website profile and mode are returned.
     * -   When using the top level endpoint with OAuth, you can specify the profile and mode with the `profileId` and `testmode` parameters respectively. If you omit `profileId`, you will get all
     *     Refunds for the Organization.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
     */
    list(parameters: ListParameters): Promise<List<Refund>>;
    list(parameters: ListParameters, callback: Callback<List<Refund>>): void;
    /**
     * For certain payment methods, like iDEAL, the underlying banking system will delay refunds until the next day. Until that time, refunds may be canceled manually in the [Mollie
     * Dashboard](https://www.mollie.com/dashboard), or programmatically by using this endpoint.
     *
     * A Refund can only be canceled while its `status` field is either `queued` or `pending`. See the /reference/v2/refunds-api/get-refund for more information.
     *
     * @since 1.1.1
     * @see https://docs.mollie.com/reference/v2/refunds-api/cancel-refund
     */
    cancel(id: string, parameters: CancelParameters): Promise<true>;
    cancel(id: string, parameters: CancelParameters, callback: Callback<Promise<true>>): void;
}
