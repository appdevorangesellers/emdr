import { CancelParameters, CreateParameters, GetParameters, ListParameters, UpdateParameters } from './parameters';
import { PaymentData } from '../../data/payments/data';
import Callback from '../../types/Callback';
import List from '../../data/list/List';
import NetworkClient from '../../NetworkClient';
import Payment from '../../data/payments/Payment';
import Resource from '../Resource';
export default class PaymentsResource extends Resource<PaymentData, Payment> {
    constructor(networkClient: NetworkClient);
    protected getResourceUrl(): string;
    /**
     * Retrieve all payments created with the current website profile, ordered from newest to oldest.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 2.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/list-payments
     */
    all: PaymentsResource['list'];
    /**
     * Retrieve all payments created with the current website profile, ordered from newest to oldest.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/list-payments
     */
    page: PaymentsResource['list'];
    /**
     * Some payment methods can be canceled by the merchant for a certain amount of time, usually until the next business day. Or as long as the payment status is `open`. Payments may be canceled
     * manually from the Mollie Dashboard, or programmatically by using this endpoint.
     *
     * The `isCancelable` property on the Payment object will indicate if the payment can be canceled.
     *
     * @since 2.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/cancel-payment
     */
    delete: PaymentsResource['cancel'];
    /**
     * Payment creation is elemental to the Mollie API: this is where most payment implementations start off.
     *
     * Once you have created a payment, you should redirect your customer to the URL in the `_links.checkout` property from the response.
     *
     * To wrap your head around the payment process, an explanation and flow charts can be found in the Payments API Overview.
     *
     * @since 2.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/create-payment
     */
    create(parameters: CreateParameters): Promise<Payment>;
    create(parameters: CreateParameters, callback: Callback<Payment>): void;
    /**
     * Retrieve a single payment object by its payment token.
     *
     * @since 2.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/get-payment
     */
    get(id: string, parameters?: GetParameters): Promise<Payment>;
    get(id: string, parameters: GetParameters, callback: Callback<Payment>): void;
    /**
     * Retrieve all payments created with the current website profile, ordered from newest to oldest.
     *
     * The results are paginated. See pagination for more information.
     *
     * @since 3.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/list-payments
     */
    list(parameters?: ListParameters): Promise<List<Payment>>;
    list(parameters: ListParameters, callback: Callback<List<Payment>>): void;
    /**
     * This endpoint can be used to update some details of a created payment.
     *
     * @since 3.2.0
     * @see https://docs.mollie.com/reference/v2/payments-api/update-payment
     */
    update(id: string, parameters: UpdateParameters): Promise<Payment>;
    update(id: string, parameters: UpdateParameters, callback: Callback<Payment>): void;
    /**
     * Some payment methods can be canceled by the merchant for a certain amount of time, usually until the next business day. Or as long as the payment status is `open`. Payments may be canceled
     * manually from the Mollie Dashboard, or programmatically by using this endpoint.
     *
     * The `isCancelable` property on the Payment object will indicate if the payment can be canceled.
     *
     * @since 2.0.0
     * @see https://docs.mollie.com/reference/v2/payments-api/cancel-payment
     */
    cancel(id: string, parameters?: CancelParameters): Promise<Payment>;
    cancel(id: string, parameters: CancelParameters, callback: Callback<List<Payment>>): void;
}
