/// <reference types="node" />
import { AxiosInstance } from 'axios';
import { SecureContextOptions } from 'tls';
import List from './data/list/List';
import Options from './Options';
/**
 * This class is essentially a wrapper around axios. It simplifies communication with the Mollie server over the
 * network.
 */
export default class NetworkClient {
    protected readonly axiosInstance: AxiosInstance;
    constructor({ apiKey, accessToken, versionStrings, apiEndpoint, caCertificates, libraryVersion, nodeVersion, ...axiosOptions }: Options & {
        caCertificates?: SecureContextOptions['ca'];
        libraryVersion: string;
        nodeVersion: string;
    });
    post<R>(url: string, data: any, query?: Record<string, any>): Promise<R | true>;
    get<R>(url: string, query?: Record<string, any>): Promise<R>;
    list<R>(url: string, resourceName: string, query?: Record<string, any>): Promise<Array<R> & Pick<List<R>, 'links' | 'count'>>;
    patch<R>(url: string, data: any): Promise<R>;
    delete<R>(url: string, context?: any): Promise<R | true>;
}
