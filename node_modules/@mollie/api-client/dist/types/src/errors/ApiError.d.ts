import { MollieApiErrorLinks, Url } from '../data/global';
import { AxiosResponse } from 'axios';
import Maybe from '../types/Maybe';
export default class ApiError extends Error {
    protected title?: string | undefined;
    protected status?: number | undefined;
    protected field?: string | undefined;
    protected links?: MollieApiErrorLinks | undefined;
    constructor(message: string, title?: string | undefined, status?: number | undefined, field?: string | undefined, links?: MollieApiErrorLinks | undefined);
    /**
     * Get the error message
     *
     * @since 3.0.0
     */
    getMessage(): string;
    /**
     * Get the field name that contains an error
     *
     * @since 3.0.0
     */
    getField(): Maybe<string>;
    /**
     * Get the API status code
     *
     * @since 3.0.0
     */
    getStatusCode(): Maybe<number>;
    /**
     * Get the documentation URL
     *
     * @since 3.0.0
     */
    getDocumentationUrl(): Maybe<string>;
    /**
     * Get the dashboard URL
     *
     * @since 3.0.0
     */
    getDashboardUrl(): Maybe<string>;
    /**
     * Check if the link exists
     *
     * @since 3.0.0
     */
    hasLink(key: string): boolean;
    /***
     * Retrieve a link by name
     *
     * @since 3.0.0
     */
    getLink(key: string): Maybe<Url>;
    /**
     * @since 3.0.0
     */
    getUrl(key: keyof MollieApiErrorLinks): Maybe<string>;
    toString(): string;
    /**
     * Creates and returns an `ApiError` from the passed response.
     *
     * @since 3.0.0
     */
    static createFromResponse(response: AxiosResponse): ApiError;
}
