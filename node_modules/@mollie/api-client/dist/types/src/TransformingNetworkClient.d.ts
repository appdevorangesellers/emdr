import NetworkClient from './NetworkClient';
/**
 * This class wraps around a `NetworkClient`, and transforms objects returned by the Mollie server.
 */
export default class TransformingNetworkClient<R, T> {
    protected readonly networkClient: NetworkClient;
    protected readonly transform: (input: R) => T;
    constructor(networkClient: NetworkClient, transform: (input: R) => T);
    post<U extends T | true = T | true>(...passingArguments: Parameters<NetworkClient['post']>): Promise<U>;
    get(...passingArguments: Parameters<NetworkClient['get']>): Promise<T>;
    list(...passingArguments: Parameters<NetworkClient['list']>): Promise<T[] & {
        count: number;
        links: import("./data/list/List").ListLinks;
    }>;
    patch(...passingArguments: Parameters<NetworkClient['patch']>): Promise<T>;
    delete<U extends T | true = T | true>(...passingArguments: Parameters<NetworkClient['delete']>): Promise<U>;
}
